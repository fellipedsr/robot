image: docker.io/cdaraujo/node-wine:latest
variables:
  CLIENT_URL:
  CLIENT:

# before_script: | 
#     echo 'http://dl-cdn.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories;
#     apk update;
#     apk add wine git mono jq 7zip

stages:
  - build

build-latest:
  stage: build
  when: manual
  tags:
    - saas-linux-2xlarge-amd64
    #- internal-x64
  timeout: 10m

  script: |
    apk add curl openssl
    export VERSION=$(echo "$CI_PIPELINE_ID.`date +%d`.`date +%m`")

    cat <<EOF > package.json 
    `jq --arg ver "$VERSION" '.version = $ver' package.json`
    EOF

    cat <<EOF > db/robot.config.base.json
    `jq --arg url "$CLIENT_URL" '.api_url = $url | .socket_url = $url' db/robot.config.base.json`
    EOF
    
    rm -rf .env.example; echo 'NODE_ENV="production"' > .env;

    npm install; 
    
    npm install sqlite3@5 --build-from-source --target_arch=x64 --target_platform=win32;
    
    npm run makewin;

    rm -rf ./out/sales-win32-x64/resources/app.asar.unpacked/node_modules/sqlite3/build/Release/node_sqlite3.node
    touch ./out/sales-win32-x64/.production;
    mkdir -p ./out/sales-win32-x64/db;
    cp ./db/base.db3 ./out/sales-win32-x64/db/base.db3;
    cp ./db/updater.exe ./out/sales-win32-x64/db/updater.exe;
    cp ./db/robot.config.base.json ./out/sales-win32-x64/db/robot.config.base.json;
    cp /node_sqlite3.node ./out/sales-win32-x64/resources/app.asar.unpacked/node_modules/sqlite3/build/Release/node_sqlite3.node
    mv ./out/sales-win32-x64/ ./out/robot-trackr/

    # cp /7zCon.sfx .;
    # cat <<EOL > config.txt
    # ;!@Install@!UTF-8!
    # Title="robot trackr.digital"
    # GUIMode="2"
    # InstallPath=""
    # OverwriteMode="0"
    # ;!@InstallEnd@!
    # EOL
    
    # 7z a -sfx7zCon.sfx "app.exe" "./out/robot-trackr/."
    # chmod +x app.exe;

    # cat 7zCon.sfx config.txt app.exe > robot_$CLIENT-$VERSION.exe
    # chmod +x robot_$CLIENT-$VERSION.exe;
    
    export ZIP="${CLIENT}_robot_v${VERSION}.zip"
    7z a -tzip "$ZIP" ./out/robot-trackr/.

    export B2AUTH=`curl --location 'https://api.backblazeb2.com/b2api/v3/b2_authorize_account' \
      --header "Authorization: Basic $B2_TRACKR_BUILDER_TKN"`
    
    export B2APIURL=`echo $B2AUTH | jq .apiInfo.storageApi.apiUrl | tr -d \"`
    export B2APIHOST=`echo $B2APIURL | sed -E 's/^\s*.*:\/\///g'`
    export B2BUCKETID=`echo $B2AUTH | jq .apiInfo.storageApi.bucketId | tr -d \"`
    export B2AUTHTOKEN=`echo $B2AUTH | jq .authorizationToken | tr -d \"`

    export B2API=`curl --location "$B2APIURL/b2api/v3/b2_get_upload_url?bucketId=$B2BUCKETID" \
      --header "Host: $B2APIHOST" \
      --header "Authorization: $B2AUTHTOKEN"`

    export B2UPLOADTOKEN=`echo $B2API | jq .authorizationToken | tr -d \"`
    export B2UPLOADURL=`echo $B2API | jq .uploadUrl | tr -d \"`
    export B2UPLOADURLHOST=`echo $B2UPLOADURL | sed -E 's/^\s*.*:\/\///g'`
    export ZIPSHA1=$(openssl dgst -sha1 $ZIP | awk '{print $2;}')

    curl --fail -v -k "$B2UPLOADURL" \
    --header "Content-Type: b2/x-auto" \
    --header "X-Bz-Info-Author: trackr" \
    --header "Host: $B2UPLOADURLHOST" \
    --header "Authorization: $B2UPLOADTOKEN" \
    --header "X-Bz-File-Name: $ZIP" \
    --header "X-Bz-Content-Sha1: $ZIPSHA1" \
    --data-binary "@$ZIP"

    curl -v --location "https://robot-versions.carlosdanaraujo.workers.dev/update?customer=$CLIENT&version=v$VERSION" \
      --header "x-tkn: $VERSION_BUILDER_ADMIN_TKN"


# 7z a -t7z -m0=lzma2 -mx=9 -mfb=64 -md=64m -ms=on -sfx7zCon.sfx "app.exe" "./out/sales-win32-x64/."
# 7z a -t7z -mx5 -sfx $CLIENT-$CI_PIPELINE_ID.exe ./out/sales-win32-x64/*
# zip -r $CLIENT-$CI_PIPELINE_ID.zip ./out/sales-win32-x64/
  
  artifacts:
    paths:
      - $CLIENT_robot*.zip
    expire_in: 1 week